# shellcheck shell=bash
# To allow shellcheck linting

# Set up gpg agent
# https://github.com/Homebrew/homebrew-core/issues/14737#issuecomment-309848851
GPG_TTY="$(tty)"
export GPG_TTY
gpg-connect-agent updatestartuptty /bye >/dev/null

# Update dotfiles
dfu() {
  (
    cd ~/dotfiles && git pull --ff-only && ./install -q
  )
}

# This script was automatically generated by the broot program
# More information can be found in https://github.com/Canop/broot
# This function starts broot and executes the command
# it produces, if any.
# It's needed because some shell commands, like `cd`,
# have no useful effect if executed in a subshell.
function br {
    local cmd cmd_file code
    cmd_file=$(mktemp)
    if broot --outcmd "$cmd_file" "$@"; then
        cmd=$(<"$cmd_file")
        command rm -f "$cmd_file"
        eval "$cmd"
    else
        code=$?
        command rm -f "$cmd_file"
        return "$code"
    fi
}

# Argbash via docker container
# https://web.archive.org/web/20230927191830/https://github.com/matejak/argbash/blob/master/docker/README.md
function argbash() {
  workingdir="$PWD"

  # Initialize an empty array to store the modified arguments
  modified_args=()

  # Iterate over each argument
  for arg in "$@"; do
    # If the argument starts with the working directory, remove that prefix
    if [[ $arg == $workingdir/* ]]; then
      arg="${arg#"$workingdir"/}"
    fi
    
    # Append the (possibly modified) argument to the array
    modified_args+=("$arg")
  done

  docker run --rm \
  -v "$workingdir:/work" \
  -u "$(id -u):$(id -g)" matejak/argbash "${modified_args[@]}"
}

function argbash-init() {
  workingdir="$PWD"

  # Initialize an empty array to store the modified arguments
  modified_args=()

  # Iterate over each argument
  for arg in "$@"; do
    # If the argument starts with the working directory, remove that prefix
    if [[ $arg == $workingdir/* ]]; then
      arg="${arg#"$workingdir"/}"
    fi
    
    # Append the (possibly modified) argument to the array
    modified_args+=("$arg")
  done

  docker run --rm -e PROGRAM=argbash-init \
  -v "$workingdir:/work" \
  -u "$(id -u):$(id -g)" matejak/argbash "${modified_args[@]}"
}

# Update Spicetify in one go
function spicetify-update() {
  spicetify backup
  spicetify upgrade
  spicetify restore backup apply
}

## Run executable from local node_modules/
# https://web.archive.org/web/20200812154305/https://2ality.com/2016/01/locally-installed-npm-executables.html
function npm-do { (PATH=$(npm bin):$PATH; "$@";) }
