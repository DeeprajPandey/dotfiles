### Basic settings
# improve colors
set -ga terminal-overrides ",screen-256color*:Tc"
set -g default-terminal "screen-256color"

# switch to next session on destroy
set -g detach-on-destroy off

# start window numbers at 1 to match keyboard order with tmux order
set -g base-index 1

# start pane numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1

# increase scrollback lines
set -g history-limit 65536

# enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on


### Keybindings
# set prefix to Ctrl+A
unbind C-b
set -g prefix C-a
# C-a + C-a will send C-a through: helpful for nested tmux sessions as well
bind C-a send-prefix

# reload config file with Ctrl-r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "config reloaded!"

### Vim keybindings for nav + window/pane management
setw -g mode-keys vi

# vi keybindings for command, choice, paste buffer, and find prompts
set -g status-keys vi

# vi keybindings for pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# shift + vi movements for resizing panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# toggle synchronize-panes
bind C-y setw synchronize-panes

# vi keybindings for cycling through windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# switch to windows 1 through 4
# ctrl+a c -> new window
# ctrl+a , -> rename current window
# ctrl+a w -> show list of windows and sessions
unbind p  # don't need the previous window switching
bind u select-window -t 1
bind i select-window -t 2
bind o select-window -t 3
bind p select-window -t 4

# create new windows/panes in same directory
bind c new-window -c "#{pane_current_path}"

# sensible split pane bindings: https://github.com/tmux-plugins/tmux-pain-control
# horizontal and vertical splits with `|` and `-` w/ default keybindings intact
bind "|" split-window -h -c "#{pane_current_path}"
bind "%" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# full window split into two (full width + full height)
bind "\\" split-window -fh -c "#{pane_current_path}"
bind "_" split-window -fv -c "#{pane_current_path}"

# vi keybindings for copy-mode
bind -T copy-mode-vi "v" send -X begin-selection
bind -T copy-mode-vi "V" send -X rectangle-toggle
bind -T copy-mode-vi "y" send -X copy-selection-and-cancel


### Advanced settings
# renumber windows sequentially after closing any of them
set -g renumber-windows on

# size windows based on clients looking at that window
setw -g aggressive-resize on

# make vim work better with tmux
set -g focus-events on

# don't wait for escape sequences
set -sg escape-time 0

# monitor windows for activity
setw -g monitor-activity on

# display tmux messages for 1.25s
set -g display-time 1250

# display pane numbers for 2s
set -g display-panes-time 2000

# pane number appearance
set -g display-panes-active-colour colour166 #blue
set -g display-panes-colour colour33 #orange

# set window title
set -g set-titles on
set -g set-titles-string '#T'


# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

### Utility keybindings
# enable and disable keyboard input for panes
bind < select-pane -d \; display-message "input disabled"
bind > select-pane -e \; display-message "input enabled"

# keybinding to clear history
bind C-x clear-history \; display-message "history cleared"

# switch between the last 2 sessions (similar to `cd -`)
unbind Space
bind-key Space switch-client -l

# C-b ! breaks current pane into separate window
# join a pane/window from the current session into the current window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# reenable automatic renaming for the current window
bind N setw automatic-rename on \; display-message "automatic rename enabled"

# clock
setw -g clock-mode-colour colour64 #green

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'

# Create/attach to a new session for fzf'd project repo: theprimeagen
bind-key f run-shell "tmux new-window ~/.dotfiles/scripts/wd_tmux_session"

# Open project todo if it exists else open general todo: theprimeagen
bind D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/wd/_wip/todo.md"

# session keybindings
# ctrl+a : -> new -s [name]
# ctrl+a $ -> rename current session
# ctrl+a s -> show list of sessions
# ctrl+a ( -> switch to previous session
# ctrl+a ) -> switch to next session

# Sort session list in reverse chronological order
# -s starts with sessions collapsed (doesn't show windows)
# -Z zooms the pane
# -O specifies the initial sort field: one of ‘index’, ‘name’, or ‘time’ (activity).
# https://unix.stackexchange.com/questions/608268/how-can-i-force-tmux-to-sort-my-sessions-alphabetically
bind s choose-tree -Zs -O time

# Create new session (prompt for name)
# -A makes this behave as `attach-session` if session already exists
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"

# Kill session
bind X confirm kill-session

## Plugins
# tmux-resurrect: persist tmux sessions across system restarts
# Note: no session is deleted automatically. Select a session manually by symlinking `last` to session.txt
# in `~/.local/share/tmux/resurrect`. Ref: https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_previously_saved_environment.md#restoring-previously-saved-environment
# prefix + ctrl + [s|r] for save/restore
run-shell ~/.config/tmux/plugins/tmux-resurrect/resurrect.tmux

# known issue with default-command (if it has && or ||)
# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_pane_contents.md#known-issue
set -g @resurrect-capture-pane-contents 'on'


# tmux-continuum: automatically save tmux session, no need to manually save/restore
run-shell ~/.config/tmux/plugins/tmux-continuum/continuum.tmux


### Status bar config
set -g status-interval 60
set -g status-style bg=#282828,fg=#83a598   # default for transparent
set -g pane-border-style fg=#282828
set -g pane-active-border-style fg=#7c6f64
set -g message-style bg=#fbf1c7,fg=#076678

setw -g window-status-style fg=#a89984
setw -g window-status-current-style fg=#fabd2f
setw -g window-status-activity-style fg=#fb4934
setw -g window-status-bell-style fg=#fb4939
setw -g window-status-separator '  '
# setw -g window-status-separator ' | '

# Rose Pine theme pane syncronised marker
#{?pane_synchronized,#[fg=#21205e bg=#eb6f92],}#I:#W\

# symbol for zoomed flag is `CJK RADICAL DOG`. zoom -> zoomies -> dog -> character
setw -g window-status-format '\
#{?pane_synchronized,#[fg=#282828 bold bg=#d65d0e],}\
#{?window_zoomed_flag,⺨#[bold],}\
#I:#W\
'
setw -g window-status-current-format '\
#{?pane_synchronized,#[fg=#282828 bold bg=#d65d0e],}\
#{?window_zoomed_flag,⺨,}\
#I:#W\
'

set -g status-left-length 30
set -g status-left '\
#{?pane_input_off,#[fg=#1d2021 bold bg=#cc241d],}\
#{?client_prefix,#[fg=#d65d0e],#[fg=#a89984]}[\
#{?pane_input_off,#[fg=#1d2021],#[fg=default]}#S:#I.#P\
#{?client_prefix,#[fg=#d65d0e],#[fg=#a89984]}]\
#[bg=default] \
'

set -g status-right-length 100
set -g status-right '\
#([ "$(tmux show-option -gqv prefix)" != "C-a" ] && echo "($(tmux show-option -gqv prefix)) ")\
#{?client_readonly,#[fg=#1d2021 bg=#fabd2f bold] ◢◤◢◤◢◤◢◤ Read Only ◢◤◢◤◢◤◢◤  #[default] ,}\
#{?client_prefix,#[fg=#d65d0e],#[fg=#a89984]} \
#[fg=#8ec07c]#(echo "#{pane_current_path}" | rev | cut -d"/" -f-3 | rev) \
#{?client_prefix,#[fg=#d65d0e],#[fg=#a89984]}  \
#[fg=#d3869b]#([ -f $HOME/.name ] && cat $HOME/.name || hostname) \
#{?client_prefix,#[fg=#d65d0e],#[fg=#a89984]} 󰒋 \
#[fg=#8ec07c]#{weather}\
'

# set -g status-position top

run-shell ~/.config/tmux/plugins/tmux-weather/tmux-weather.tmux

